@{
    ViewBag.Title = "Back-end Development";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <br />
    <h2 class="text-center mb-4">Back-end Development</h2>
    <h4 class="text-center mb-4">The essential skills every back-end developer must have.</h4>
    <p>Every web or mobile app has two parts: a front-end and a back-end. The front-end is what the user sees and interacts with. The back-end is where the data gets processed and stored.</p>
    <p>The average salary for a back-end developer is $121,112 per year in the United States.</p>

    <h5>JavaScript Track</h5>
    <p>This track focuses on JavaScript, a versatile and widely-used programming language. JavaScript is essential for building interactive web applications, and proficiency in it is highly valued in the industry.</p>
    <p>Steps to follow:</p>
    <ul>
        <li>Learn basic syntax and data types of JavaScript.</li>
        <li>Understand functions, closures, and asynchronous programming.</li>
        <li>Explore modern JavaScript features like ES6+.</li>
        <li>Learn how to work with Node.js for server-side development.</li>
        <li>Explore frameworks like Express.js for building web applications.</li>
    </ul>

    <h5>Python Track</h5>
    <p>This track emphasizes Python, a beginner-friendly and powerful programming language. Python is widely used in various domains, including web development, data science, and automation.</p>
    <p>Steps to follow:</p>
    <ul>
        <li>Learn basic syntax, data structures, and control flow in Python.</li>
        <li>Understand object-oriented programming principles in Python.</li>
        <li>Explore web development frameworks like Django or Flask.</li>
        <li>Learn how to work with databases using SQL and popular ORM libraries.</li>
        <li>Explore advanced topics like asynchronous programming and web scraping.</li>
    </ul>

    <h5>C# Track</h5>
    <p>This track focuses on C#, a versatile programming language developed by Microsoft. C# is commonly used for building enterprise-level applications, games, and web services.</p>
    <p>Steps to follow:</p>
    <ul>
        <li>Learn basic syntax, data types, and control flow in C#.</li>
        <li>Understand object-oriented programming principles and design patterns in C#.</li>
        <li>Explore web development with ASP.NET MVC or ASP.NET Core.</li>
        <li>Learn how to work with databases using Entity Framework or ADO.NET.</li>
        <li>Explore advanced topics like asynchronous programming and microservices architecture.</li>
    </ul>

    <h5>Design Patterns</h5>
    <p>Design patterns are reusable solutions to common problems encountered in software design. They provide a template for solving specific design problems and promote code reusability, maintainability, and flexibility.</p>
    <p>Here are some popular design patterns:</p>
    <ul>
        <li><a href="#">Singleton Pattern</a> - Ensure a class has only one instance and provide a global point of access to it.</li>
        <li><a href="#">Factory Pattern</a> - Define an interface for creating an object, but let subclasses alter the type of objects that will be created.</li>
        <li><a href="#">Observer Pattern</a> - Define a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.</li>
        <li><a href="#">Strategy Pattern</a> - Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it.</li>
        <li><a href="#">Decorator Pattern</a> - Attach additional responsibilities to an object dynamically. Decorators provide a flexible alternative to subclassing for extending functionality.</li>
    </ul>

    <h3>Useful Resources</h3>
    <h5>Programming Languages</h5>
    <ul>
        <li><a href="#">MDN Web Docs: JavaScript</a></li>
        <li><a href="#">Python Documentation</a></li>
        <li><a href="#">C# Programming Guide</a></li>
    </ul>

    <h5>Web Development Frameworks</h5>
    <ul>
        <li><a href="#">Node.js Documentation</a></li>
        <li><a href="#">Django Documentation</a></li>
        <li><a href="#">ASP.NET Documentation</a></li>
    </ul>

    <h5>Database and ORM</h5>
    <ul>
        <li><a href="#">SQL Tutorial</a></li>
    </ul>

    <h5>Version Control and Collaboration</h5>
    <ul>
        <li><a href="#">Git Documentation</a></li>
    </ul>

    <h5>Containerization</h5>
    <ul>
        <li><a href="#">Docker Documentation</a></li>
    </ul>
</div>
