@{
    ViewBag.Title = "Front-end Development";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Update the layout path as per your project
}

<div class="container">
    <br />
    <h2 class="text-center mb-4">Front-end Development</h2>
    <p>The essential skills every front-end developer must have.</p>
    <p>Every web or mobile application has two parts: a front-end and a back-end. The front-end is what the user sees and interacts with. It’s the app on your phone or the website you visit. So, front-end developers are in charge of building beautiful, interactive user interfaces.</p>
    <p>The average salary for a front-end Developer is $102,768 per year in the United States.</p>

    <h4>Topics:</h4>
    <ul>
        <li>
            <strong>HTML and CSS:</strong> Front-end development starts with HTML and CSS. These are the languages behind every web page on the Internet. My HTML/CSS series teaches you everything you need to know from absolute basics to advanced concepts. You will learn how to structure web pages using HTML and style them with CSS.
            <ul>
                <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML">HTML Documentation</a></li>
                <li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS Documentation</a></li>
                <li><a href="https://www.w3schools.com/html/">HTML Tutorial</a></li>
                <li><a href="https://www.w3schools.com/css/">CSS Tutorial</a></li>
            </ul>
        </li>
        <li>
            <strong>JavaScript:</strong> HTML and CSS are only used for building static pages. To add functionality to a page, you need to learn JavaScript. JavaScript is a programming language that allows you to make your website interactive and dynamic. It enables you to create features like dropdown menus, form validations, and interactive maps.
            <ul>
                <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript Documentation</a></li>
                <li><a href="https://www.javascripttutorial.net/">JavaScript Tutorial</a></li>
            </ul>
        </li>
        <li>
            <strong>Libraries and Frameworks:</strong> Modern applications are complex. That's where front-end tools (libraries/frameworks) come to the rescue, helping us build and ship applications faster. The top 3 tools in this space are React, Angular, and Vue. Out of these, React is the most popular so that's what I recommend you learn first. You can always learn about other tools as needed.
            <ul>
                <li><a href="https://reactjs.org/docs/getting-started.html">React Documentation</a></li>
                <li><a href="https://angular.io/docs">Angular Documentation</a></li>
                <li><a href="https://vuejs.org/v2/guide/">Vue.js Documentation</a></li>
            </ul>
        </li>
        <li>
            <strong>Automated Testing:</strong> Automated testing involves using software tools to automatically test code, ensuring it functions correctly and meets requirements. It's an essential skill for developers, offering career advancement opportunities and increased earning potential.
            <ul>
                <li><a href="https://jestjs.io/docs/getting-started">Jest Documentation</a></li>
                <li><a href="https://testing-library.com/docs/intro">Testing Library Documentation</a></li>
            </ul>
        </li>
        <li>
            <strong>Version Control and Collaboration:</strong> Version control is like a time machine for software engineers. It allows you to go back in time and see the exact state of your code at any point. This is incredibly important because it means you can easily track changes, fix bugs, and collaborate with others without the fear of losing or messing up your code.
            <ul>
                <li><a href="https://git-scm.com/doc">Git Documentation</a></li>
                <li><a href="https://guides.github.com/">GitHub Guides</a></li>
            </ul>
        </li>
        <li>
            <strong>DevOps:</strong> These days more and more companies are looking for software engineers who know a bit about DevOps: a set of practices for delivering software. Docker is the core tool used in this space. Knowing it helps you reach higher levels of software engineering.
            <ul>
                <li><a href="https://docs.docker.com/">Docker Documentation</a></li>
                <li><a href="https://kubernetes.io/docs/home/">Kubernetes Documentation</a></li>
            </ul>
        </li>
    </ul>

    <h4>Useful Resources:</h4>
    <ul>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML">HTML Documentation</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS Documentation</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript Documentation</a></li>
        <li><a href="https://reactjs.org/docs/getting-started.html">React Documentation</a></li>
        <li><a href="https://jestjs.io/docs/getting-started">Jest Documentation</a></li>
        <li><a href="https://git-scm.com/doc">Git Documentation</a></li>
        <li><a href="https://docs.docker.com/">Docker Documentation</a></li>
    </ul>
</div>

@section scripts {
    <!-- Include any additional scripts here if needed -->
}
